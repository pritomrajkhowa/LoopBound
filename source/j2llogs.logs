
***********************
2018-09-08 09:52:53
***********************

Command--Translate 

Parameters--
 File Name--loop_bound_tool/benchmark/ABC_ex01.c

Equation Pass to sympy
T(n+1)-(T(n) + 1)=0------Base Case--T(0)=b

Closed form solution return by sympy 
b + n

Original Axoims 
b1(_n1 + 1)=b1(_n1) + 1,b1(0)=b
 Closed Form Solution
_n1 + b

***********************
2018-09-08 09:58:14
***********************

Command--Translate 

Parameters--
 File Name--loop_bound_tool/benchmark/dsa_test1.t2.c

***********************
2018-09-08 10:00:41
***********************

Command--Translate 

Parameters--
 File Name--loop_bound_tool/benchmark/dsa_test1.t2.c

***********************
2018-09-08 10:07:04
***********************

Command--Translate 

Parameters--
 File Name--loop_bound_tool/benchmark/dsa_test1.t2.c

***********************
2018-09-08 10:10:54
***********************

Command--Translate 

Parameters--
 File Name--loop_bound_tool/benchmark/simple1.c

Equation Pass to sympy
T(n+1)-(T(n)/2)=0------Base Case--T(0)=i

Closed form solution return by sympy 
2**(-n)*i

Original Axoims 
i1(_n1 + 1)=i1(_n1)/2,i1(0)=i
 Closed Form Solution
2**(-_n1)*i

***********************
2018-09-08 10:23:05
***********************

Command--Translate 

Parameters--
 File Name--loop_bound_tool/benchmark/simple3.i

Equation Pass to sympy
T(n+1)-(T(n) + 1)=0------Base Case--T(0)=i

Closed form solution return by sympy 
i + n

Original Axoims 
i1(_n1 + 1)=i1(_n1) + 1,i1(0)=i
 Closed Form Solution
_n1 + i

***********************
2018-09-08 10:29:17
***********************

Command--Translate 

Parameters--
 File Name--loop_bound_tool/benchmark/ABC_ex15.c

Equation Pass to sympy
T(n+1)-(T(n) + 1)=0------Base Case--T(0)=l

Closed form solution return by sympy 
l + n

Original Axoims 
l1(_n1 + 1)=l1(_n1) + 1,l1(0)=l
 Closed Form Solution
_n1 + l

Equation Pass to sympy
T(n+1)-(T(n) + 1)=0------Base Case--T(0)=k

Closed form solution return by sympy 
k + n

Original Axoims 
k4(_n2 + 1)=k4(_n2) + 1,k4(0)=k
 Closed Form Solution
_n2 + k

Equation Pass to sympy
T(n+1)-(T(n) + 1)=0------Base Case--T(0)=j

Closed form solution return by sympy 
j + n

Original Axoims 
j7(_n3 + 1)=j7(_n3) + 1,j7(0)=j
 Closed Form Solution
_n3 + j

Equation Pass to sympy
T(n+1)-(T(n) + 1)=0------Base Case--T(0)=i

Closed form solution return by sympy 
i + n

Original Axoims 
i10(_n4 + 1)=i10(_n4) + 1,i10(0)=i
 Closed Form Solution
_n4 + i

***********************
2018-09-08 10:32:13
***********************

Command--Translate 

Parameters--
 File Name--loop_bound_tool/benchmark/ABC_ex02.c

Query to z3 
import sys
import os
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/setuptools/")
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/z3/python/")
from z3 import *
init(currentdirectory+"/packages/z3")
set_param(proof=True)

try:
	_p1=Int('_p1')
	_p2=Int('_p2')
	_n=Int('_n')
	_bool=Int('_bool')
	arraySort = DeclareSort('arraySort')
	_f=Function('_f',IntSort(),IntSort())
	_ToReal=Function('_ToReal',RealSort(),IntSort())
	_ToInt=Function('_ToInt',IntSort(),RealSort())
	break_3_flag1=Function('break_3_flag1',IntSort(),IntSort())
	a21=Function('a21',IntSort(),IntSort())
	break_1_flag16=Function('break_1_flag16',IntSort(),IntSort(),IntSort())
	b21=Function('b21',IntSort(),IntSort(),IntSort())
	break_3_flag21=Function('break_3_flag21',IntSort(),IntSort())
	break_2_flag21=Function('break_2_flag21',IntSort(),IntSort())
	break_2_flag16=Function('break_2_flag16',IntSort(),IntSort(),IntSort())
	break_4_flag21=Function('break_4_flag21',IntSort(),IntSort())
	b16=Function('b16',IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag1=Function('break_2_flag1',IntSort(),IntSort())
	c16=Function('c16',IntSort(),IntSort(),IntSort())
	a16=Function('a16',IntSort(),IntSort(),IntSort())
	_N2=Function('_N2',IntSort(),IntSort())
	break_1_flag21=Function('break_1_flag21',IntSort(),IntSort())
	a1=Function('a1',IntSort(),IntSort())
	c21=Function('c21',IntSort(),IntSort(),IntSort())
	_N1=Function('_N1',IntSort(),IntSort())
	c1=Function('c1',IntSort(),IntSort(),IntSort())
	break_3_flag16=Function('break_3_flag16',IntSort(),IntSort(),IntSort())
	c=Int('c')
	b=Int('b')
	_n2=Int('_n2')
	_n1=Int('_n1')
	break_1_flag1=Function('break_1_flag1',IntSort(),IntSort())
	break_4_flag1=Function('break_4_flag1',IntSort(),IntSort())
	b1=Function('b1',IntSort(),IntSort())
	ex02=Function('ex02',RealSort(),IntSort(),IntSort(),IntSort())
	_s=Solver()
	_s.add(ForAll([_n],Implies(_n>=0, _f(_n)==_n)))
	_s.set("timeout",500)
	_s.add(ForAll([_n2],Implies(_n2>=0,a21(_n2 + 1) == a16(_N1(_n2), _n2))))
	_s.add(ForAll([_n2],Implies(_n2>=0,c21(_n2 + 1, c) == c16(_N1(_n2), _n2))))
	_s.add(ForAll([_n2],Implies(_n2>=0,b21(_n2 + 1, b) == b16(_N1(_n2), _n2, b))))
	_s.add(a21(0) == 0)
	_s.add(c21(0, c) == c)
	_s.add(b21(0, b) == b)
	_s.add(ForAll([_n1,_n2],Implies(And(_n1>=0,_n2>=0),a16(_n1 + 1, _n2) == If(a16(_n1, _n2) >= c16(_n1, _n2),a16(_n1, _n2),If(c16(_n1, _n2) >= a16(_n1, _n2) + 1,a16(_n1, _n2) + 1,If(((1)>(0)),1,a16(_n1, _n2)))))))
	_s.add(ForAll([_n1,_n2],Implies(And(_n1>=0,_n2>=0),c16(_n1 + 1, _n2) == If(a16(_n1, _n2) >= c16(_n1, _n2),c16(_n1, _n2) + 1,If(c16(_n1, _n2) >= a16(_n1, _n2) + 1,c16(_n1, _n2),If(((1)>(0)),1,c16(_n1, _n2)))))))
	_s.add(ForAll([_n1,_n2],Implies(And(_n1>=0,_n2>=0),b16(_n1 + 1, _n2, b) == If(a16(_n1, _n2) >= c16(_n1, _n2),b16(_n1, _n2, b),If(c16(_n1, _n2) >= a16(_n1, _n2) + 1,b16(_n1, _n2, b),If(((1)>(0)),1,b16(_n1, _n2, b)))))))
	_s.add(ForAll([_n2],a16(0, _n2) == a21(_n2)))
	_s.add(ForAll([_n2],c16(0, _n2) == 0))
	_s.add(ForAll([_n2],b16(0, _n2, b) == b21(_n2, b)))
	_s.add(Not(a16(0, 0) >= c16(0, 0)))

except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()

	sys.exit(1)

try:
	result=_s.check()
	if sat==result:
		print "Counter Example"
		print _s.model()
	elif unsat==result:
		result
		try:
			if os.path.isfile('j2llogs.logs'):
				file = open('j2llogs.logs', 'a')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
			else:
				file = open('j2llogs.logs', 'w')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
		except Exception as e:
			file = open('j2llogs.logs', 'a')
			file.write("\n**************\nProof Details\n**************\n"+"Error"+"\n")
			file.close()
		print "Successfully Proved"
	else:
		print "Failed To Prove"
except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()


Query to z3 
import sys
import os
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/setuptools/")
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/z3/python/")
from z3 import *
init(currentdirectory+"/packages/z3")
set_param(proof=True)

try:
	_p1=Int('_p1')
	_p2=Int('_p2')
	_n=Int('_n')
	_bool=Int('_bool')
	arraySort = DeclareSort('arraySort')
	_f=Function('_f',IntSort(),IntSort())
	_ToReal=Function('_ToReal',RealSort(),IntSort())
	_ToInt=Function('_ToInt',IntSort(),RealSort())
	break_3_flag1=Function('break_3_flag1',IntSort(),IntSort())
	a21=Function('a21',IntSort(),IntSort())
	break_1_flag16=Function('break_1_flag16',IntSort(),IntSort(),IntSort())
	b21=Function('b21',IntSort(),IntSort(),IntSort())
	break_3_flag21=Function('break_3_flag21',IntSort(),IntSort())
	break_2_flag21=Function('break_2_flag21',IntSort(),IntSort())
	break_2_flag16=Function('break_2_flag16',IntSort(),IntSort(),IntSort())
	break_4_flag21=Function('break_4_flag21',IntSort(),IntSort())
	b16=Function('b16',IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag1=Function('break_2_flag1',IntSort(),IntSort())
	c16=Function('c16',IntSort(),IntSort(),IntSort())
	a16=Function('a16',IntSort(),IntSort(),IntSort())
	_N2=Function('_N2',IntSort(),IntSort())
	break_1_flag21=Function('break_1_flag21',IntSort(),IntSort())
	a1=Function('a1',IntSort(),IntSort())
	c21=Function('c21',IntSort(),IntSort(),IntSort())
	_N1=Function('_N1',IntSort(),IntSort())
	c1=Function('c1',IntSort(),IntSort(),IntSort())
	break_3_flag16=Function('break_3_flag16',IntSort(),IntSort(),IntSort())
	c=Int('c')
	b=Int('b')
	_n2=Int('_n2')
	_n1=Int('_n1')
	break_1_flag1=Function('break_1_flag1',IntSort(),IntSort())
	break_4_flag1=Function('break_4_flag1',IntSort(),IntSort())
	b1=Function('b1',IntSort(),IntSort())
	ex02=Function('ex02',RealSort(),IntSort(),IntSort(),IntSort())
	_s=Solver()
	_s.add(ForAll([_n],Implies(_n>=0, _f(_n)==_n)))
	_s.set("timeout",500)
	_s.add(ForAll([_n2],Implies(_n2>=0,a21(_n2 + 1) == a16(_N1(_n2), _n2))))
	_s.add(ForAll([_n2],Implies(_n2>=0,c21(_n2 + 1, c) == c16(_N1(_n2), _n2))))
	_s.add(ForAll([_n2],Implies(_n2>=0,b21(_n2 + 1, b) == b16(_N1(_n2), _n2, b))))
	_s.add(a21(0) == 0)
	_s.add(c21(0, c) == c)
	_s.add(b21(0, b) == b)
	_s.add(Not(((1)<(2))))

except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()

	sys.exit(1)

try:
	result=_s.check()
	if sat==result:
		print "Counter Example"
		print _s.model()
	elif unsat==result:
		result
		try:
			if os.path.isfile('j2llogs.logs'):
				file = open('j2llogs.logs', 'a')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
			else:
				file = open('j2llogs.logs', 'w')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
		except Exception as e:
			file = open('j2llogs.logs', 'a')
			file.write("\n**************\nProof Details\n**************\n"+"Error"+"\n")
			file.close()
		print "Successfully Proved"
	else:
		print "Failed To Prove"
except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()


Query to z3 
import sys
import os
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/setuptools/")
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/z3/python/")
from z3 import *
init(currentdirectory+"/packages/z3")
set_param(proof=True)

try:
	_p1=Int('_p1')
	_p2=Int('_p2')
	_n=Int('_n')
	_bool=Int('_bool')
	arraySort = DeclareSort('arraySort')
	_f=Function('_f',IntSort(),IntSort())
	_ToReal=Function('_ToReal',RealSort(),IntSort())
	_ToInt=Function('_ToInt',IntSort(),RealSort())
	break_3_flag1=Function('break_3_flag1',IntSort(),IntSort())
	a21=Function('a21',IntSort(),IntSort())
	break_1_flag16=Function('break_1_flag16',IntSort(),IntSort(),IntSort())
	b21=Function('b21',IntSort(),IntSort(),IntSort())
	break_3_flag21=Function('break_3_flag21',IntSort(),IntSort())
	break_2_flag21=Function('break_2_flag21',IntSort(),IntSort())
	break_2_flag16=Function('break_2_flag16',IntSort(),IntSort(),IntSort())
	break_4_flag21=Function('break_4_flag21',IntSort(),IntSort())
	b16=Function('b16',IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag1=Function('break_2_flag1',IntSort(),IntSort())
	c16=Function('c16',IntSort(),IntSort(),IntSort())
	a16=Function('a16',IntSort(),IntSort(),IntSort())
	_N2=Function('_N2',IntSort(),IntSort())
	break_1_flag21=Function('break_1_flag21',IntSort(),IntSort())
	a1=Function('a1',IntSort(),IntSort())
	c21=Function('c21',IntSort(),IntSort(),IntSort())
	_N1=Function('_N1',IntSort(),IntSort())
	c1=Function('c1',IntSort(),IntSort(),IntSort())
	break_3_flag16=Function('break_3_flag16',IntSort(),IntSort(),IntSort())
	c=Int('c')
	b=Int('b')
	_n2=Int('_n2')
	_n1=Int('_n1')
	break_1_flag1=Function('break_1_flag1',IntSort(),IntSort())
	break_4_flag1=Function('break_4_flag1',IntSort(),IntSort())
	b1=Function('b1',IntSort(),IntSort())
	ex02=Function('ex02',RealSort(),IntSort(),IntSort(),IntSort())
	_s=Solver()
	_s.add(ForAll([_n],Implies(_n>=0, _f(_n)==_n)))
	_s.set("timeout",500)
	_s.add(ForAll([_n2],Implies(_n2>=0,a21(_n2 + 1) == a16(_N1(_n2), _n2))))
	_s.add(ForAll([_n2],Implies(_n2>=0,c21(_n2 + 1, c) == c16(_N1(_n2), _n2))))
	_s.add(ForAll([_n2],Implies(_n2>=0,b21(_n2 + 1, b) == b16(_N1(_n2), _n2, b))))
	_s.add(a21(0) == 0)
	_s.add(c21(0, c) == c)
	_s.add(b21(0, b) == b)
	_s.add(ForAll([_n2],Implies(_n2>=0,a21(_n2 + 1) == a16(_N1(_n2), _n2))))
	_s.add(ForAll([_n2],Implies(_n2>=0,c21(_n2 + 1, c) == c16(_N1(_n2), _n2))))
	_s.add(ForAll([_n2],Implies(_n2>=0,b21(_n2 + 1, b) == b16(_N1(_n2), _n2, b))))
	_s.add(a21(0) == 0)
	_s.add(c21(0, c) == c)
	_s.add(b21(0, b) == b)
	_s.add(Not(b < _N2(b) + 1))

except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()

	sys.exit(1)

try:
	result=_s.check()
	if sat==result:
		print "Counter Example"
		print _s.model()
	elif unsat==result:
		result
		try:
			if os.path.isfile('j2llogs.logs'):
				file = open('j2llogs.logs', 'a')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
			else:
				file = open('j2llogs.logs', 'w')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
		except Exception as e:
			file = open('j2llogs.logs', 'a')
			file.write("\n**************\nProof Details\n**************\n"+"Error"+"\n")
			file.close()
		print "Successfully Proved"
	else:
		print "Failed To Prove"
except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()


***********************
2018-09-08 10:40:13
***********************

Command--Translate 

Parameters--
 File Name--loop_bound_tool/benchmark/ABC_ex03.c

Query to z3 
import sys
import os
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/setuptools/")
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/z3/python/")
from z3 import *
init(currentdirectory+"/packages/z3")
set_param(proof=True)

try:
	_p1=Int('_p1')
	_p2=Int('_p2')
	_n=Int('_n')
	_bool=Int('_bool')
	arraySort = DeclareSort('arraySort')
	_f=Function('_f',IntSort(),IntSort())
	_ToReal=Function('_ToReal',RealSort(),IntSort())
	_ToInt=Function('_ToInt',IntSort(),RealSort())
	break_3_flag1=Function('break_3_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag10=Function('break_1_flag10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_12_flag60=Function('break_12_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag47=Function('break_9_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	a60=Function('a60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag26=Function('break_3_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	b1=Function('b1',IntSort(),IntSort())
	break_11_flag60=Function('break_11_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n4=Int('_n4')
	break_4_flag47=Function('break_4_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d1=Function('d1',IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag60=Function('break_3_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag60=Function('break_4_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag10=Function('break_2_flag10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d10=Function('d10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag1=Function('break_6_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_7_flag47=Function('break_7_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e10=Function('e10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_11_flag1=Function('break_11_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag26=Function('break_4_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N2=Function('_N2',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag60=Function('break_6_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag60=Function('break_9_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N3=Function('_N3',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag1=Function('break_2_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag1=Function('break_8_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag1=Function('break_9_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag60=Function('break_5_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag47=Function('break_3_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag26=Function('break_5_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_7_flag60=Function('break_7_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N1=Function('_N1',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag26=Function('break_1_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e26=Function('e26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N4=Function('_N4',IntSort(),IntSort(),IntSort(),IntSort())
	a1=Function('a1',IntSort(),IntSort(),IntSort(),IntSort())
	break_10_flag60=Function('break_10_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag47=Function('break_5_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c47=Function('c47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag60=Function('break_1_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag47=Function('break_1_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c26=Function('c26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c1=Function('c1',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e1=Function('e1',IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag26=Function('break_2_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag1=Function('break_5_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	e47=Function('e47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag47=Function('break_8_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_12_flag1=Function('break_12_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	c=Int('c')
	b=Int('b')
	e=Int('e')
	d=Int('d')
	break_2_flag60=Function('break_2_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n2=Int('_n2')
	_n3=Int('_n3')
	break_2_flag47=Function('break_2_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n1=Int('_n1')
	break_7_flag1=Function('break_7_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag60=Function('break_8_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c60=Function('c60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d26=Function('d26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	a47=Function('a47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag1=Function('break_1_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_10_flag1=Function('break_10_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	e60=Function('e60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d47=Function('d47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d60=Function('d60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag47=Function('break_6_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag1=Function('break_4_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	ex03=Function('ex03',RealSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_s=Solver()
	_s.add(ForAll([_n],Implies(_n>=0, _f(_n)==_n)))
	_s.set("timeout",500)
	_s.add(ForAll([_n4],Implies(_n4>=0,a60(_n4 + 1,b,e,d) == a47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,c60(_n4 + 1,c,b,e,d) == c47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,e60(_n4 + 1,e,b,d) == e47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,d60(_n4 + 1,d,b,e) == d47(_N3(_n4,b,e,d),_n4,b,d,e))))
	_s.add(a60(0,b,e,d) == 1)
	_s.add(c60(0,c,b,e,d) == c)
	_s.add(e60(0,e,b,d) == e)
	_s.add(d60(0,d,b,e) == d)
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),a47(_n3 + 1,_n4,b,e,d) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),a47(_n3,_n4,b,e,d),If(((c47(_n3,_n4,b,e,d))>=(((a47(_n3,_n4,b,e,d))+(1)))),((a47(_n3,_n4,b,e,d))+(1)),a47(_n3,_n4,b,e,d))))))
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),c47(_n3 + 1,_n4,b,e,d) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),c26(_N2(_n3,_n4,b,e,d),_n3,_n4,b,e,d),c47(_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),e47(_n3 + 1,_n4,b,e,d) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),e26(_N2(_n3,_n4,b,e,d),_n3,_n4,b,e,d),e47(_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),d47(_n3 + 1,_n4,b,d,e) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),d26(_N2(_n3,_n4,b,e,d),_n3,_n4,b,e,d),d47(_n3,_n4,b,d,e)))))
	_s.add(ForAll([_n4],a47(0,_n4,b,e,d) == a60(_n4,b,e,d)))
	_s.add(ForAll([_n4],c47(0,_n4,b,e,d) == 1))
	_s.add(ForAll([_n4],e47(0,_n4,b,e,d) == e60(_n4,e,b,d)))
	_s.add(ForAll([_n4],d47(0,_n4,b,d,e) == d60(_n4,d,b,e)))
	_s.add(ForAll([_n4,_n3,_n2],Implies(And(_n4>=0,And(_n3>=0,_n2>=0)),c26(_n2 + 1,_n3,_n4,b,e,d) == If(((b)>=(d26(_n2,_n3,_n4,b,e,d))),c26(_n2,_n3,_n4,b,e,d),If(((d26(_n2,_n3,_n4,b,e,d))>=(b + 1)),((c26(_n2,_n3,_n4,b,e,d))+(1)),c26(_n2,_n3,_n4,b,e,d))))))
	_s.add(ForAll([_n4,_n3,_n2],Implies(And(_n4>=0,And(_n3>=0,_n2>=0)),e26(_n2 + 1,_n3,_n4,b,e,d) == If(((b)>=(d26(_n2,_n3,_n4,b,e,d))),e10(_N1(_n2,_n3,_n4,b,e,d),_n2,_n3,_n4,b,e,d),e26(_n2,_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3,_n2],Implies(And(_n4>=0,And(_n3>=0,_n2>=0)),d26(_n2 + 1,_n3,_n4,b,e,d) == If(((b)>=(d26(_n2,_n3,_n4,b,e,d))),d10(_N1(_n2,_n3,_n4,b,e,d),_n2,_n3,_n4,b,e,d),d26(_n2,_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3],c26(0,_n3,_n4,b,e,d) == c47(_n3,_n4,b,e,d)))
	_s.add(ForAll([_n4,_n3],e26(0,_n3,_n4,b,e,d) == e47(_n3,_n4,b,e,d)))
	_s.add(ForAll([_n4,_n3],d26(0,_n3,_n4,b,e,d) == ((a47(_n3,_n4,b,e,d))+(1))))
	_s.add(ForAll([_n4,_n1,_n3,_n2],Implies(And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0))),e10(_n1 + 1,_n2,_n3,_n4,b,e,d) == If(((d10(_n1,_n2,_n3,_n4,b,e,d))>=(e10(_n1,_n2,_n3,_n4,b,e,d))),((e10(_n1,_n2,_n3,_n4,b,e,d))+(1)),e10(_n1,_n2,_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n1,_n3,_n2],Implies(And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0))),d10(_n1 + 1,_n2,_n3,_n4,b,e,d) == If(((d10(_n1,_n2,_n3,_n4,b,e,d))>=(e10(_n1,_n2,_n3,_n4,b,e,d))),d10(_n1,_n2,_n3,_n4,b,e,d),If(((e10(_n1,_n2,_n3,_n4,b,e,d))>=(((d10(_n1,_n2,_n3,_n4,b,e,d))+(1)))),((d10(_n1,_n2,_n3,_n4,b,e,d))+(1)),d10(_n1,_n2,_n3,_n4,b,e,d))))))
	_s.add(ForAll([_n4,_n3,_n2],e10(0,_n2,_n3,_n4,b,e,d) == 1))
	_s.add(ForAll([_n4,_n3,_n2],d10(0,_n2,_n3,_n4,b,e,d) == d26(_n2,_n3,_n4,b,e,d)))
	_s.add(Not(((d10(0,0,0,0,b,e,d))>=(e10(0,0,0,0,b,e,d)))))

except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()

	sys.exit(1)

try:
	result=_s.check()
	if sat==result:
		print "Counter Example"
		print _s.model()
	elif unsat==result:
		result
		try:
			if os.path.isfile('j2llogs.logs'):
				file = open('j2llogs.logs', 'a')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
			else:
				file = open('j2llogs.logs', 'w')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
		except Exception as e:
			file = open('j2llogs.logs', 'a')
			file.write("\n**************\nProof Details\n**************\n"+"Error"+"\n")
			file.close()
		print "Successfully Proved"
	else:
		print "Failed To Prove"
except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()


Query to z3 
import sys
import os
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/setuptools/")
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/z3/python/")
from z3 import *
init(currentdirectory+"/packages/z3")
set_param(proof=True)

try:
	_p1=Int('_p1')
	_p2=Int('_p2')
	_n=Int('_n')
	_bool=Int('_bool')
	arraySort = DeclareSort('arraySort')
	_f=Function('_f',IntSort(),IntSort())
	_ToReal=Function('_ToReal',RealSort(),IntSort())
	_ToInt=Function('_ToInt',IntSort(),RealSort())
	break_3_flag1=Function('break_3_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag10=Function('break_1_flag10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_12_flag60=Function('break_12_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag47=Function('break_9_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	a60=Function('a60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag26=Function('break_3_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	b1=Function('b1',IntSort(),IntSort())
	break_11_flag60=Function('break_11_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n4=Int('_n4')
	break_4_flag47=Function('break_4_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d1=Function('d1',IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag60=Function('break_3_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag60=Function('break_4_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag10=Function('break_2_flag10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d10=Function('d10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag1=Function('break_6_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_7_flag47=Function('break_7_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e10=Function('e10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_11_flag1=Function('break_11_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag26=Function('break_4_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N2=Function('_N2',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag60=Function('break_6_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag60=Function('break_9_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N3=Function('_N3',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag1=Function('break_2_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag1=Function('break_8_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag1=Function('break_9_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag60=Function('break_5_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag47=Function('break_3_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag26=Function('break_5_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_7_flag60=Function('break_7_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N1=Function('_N1',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag26=Function('break_1_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e26=Function('e26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N4=Function('_N4',IntSort(),IntSort(),IntSort(),IntSort())
	a1=Function('a1',IntSort(),IntSort(),IntSort(),IntSort())
	break_10_flag60=Function('break_10_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag47=Function('break_5_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c47=Function('c47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag60=Function('break_1_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag47=Function('break_1_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c26=Function('c26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c1=Function('c1',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e1=Function('e1',IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag26=Function('break_2_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag1=Function('break_5_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	e47=Function('e47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag47=Function('break_8_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_12_flag1=Function('break_12_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	c=Int('c')
	b=Int('b')
	e=Int('e')
	d=Int('d')
	break_2_flag60=Function('break_2_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n2=Int('_n2')
	_n3=Int('_n3')
	break_2_flag47=Function('break_2_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n1=Int('_n1')
	break_7_flag1=Function('break_7_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag60=Function('break_8_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c60=Function('c60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d26=Function('d26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	a47=Function('a47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag1=Function('break_1_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_10_flag1=Function('break_10_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	e60=Function('e60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d47=Function('d47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d60=Function('d60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag47=Function('break_6_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag1=Function('break_4_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	ex03=Function('ex03',RealSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_s=Solver()
	_s.add(ForAll([_n],Implies(_n>=0, _f(_n)==_n)))
	_s.set("timeout",500)
	_s.add(ForAll([_n4],Implies(_n4>=0,a60(_n4 + 1,b,e,d) == a47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,c60(_n4 + 1,c,b,e,d) == c47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,e60(_n4 + 1,e,b,d) == e47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,d60(_n4 + 1,d,b,e) == d47(_N3(_n4,b,e,d),_n4,b,d,e))))
	_s.add(a60(0,b,e,d) == 1)
	_s.add(c60(0,c,b,e,d) == c)
	_s.add(e60(0,e,b,d) == e)
	_s.add(d60(0,d,b,e) == d)
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),a47(_n3 + 1,_n4,b,e,d) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),a47(_n3,_n4,b,e,d),If(((c47(_n3,_n4,b,e,d))>=(((a47(_n3,_n4,b,e,d))+(1)))),((a47(_n3,_n4,b,e,d))+(1)),a47(_n3,_n4,b,e,d))))))
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),c47(_n3 + 1,_n4,b,e,d) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),c26(_N2(_n3,_n4,b,e,d),_n3,_n4,b,e,d),c47(_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),e47(_n3 + 1,_n4,b,e,d) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),e26(_N2(_n3,_n4,b,e,d),_n3,_n4,b,e,d),e47(_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),d47(_n3 + 1,_n4,b,d,e) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),d26(_N2(_n3,_n4,b,e,d),_n3,_n4,b,e,d),d47(_n3,_n4,b,d,e)))))
	_s.add(ForAll([_n4],a47(0,_n4,b,e,d) == a60(_n4,b,e,d)))
	_s.add(ForAll([_n4],c47(0,_n4,b,e,d) == 1))
	_s.add(ForAll([_n4],e47(0,_n4,b,e,d) == e60(_n4,e,b,d)))
	_s.add(ForAll([_n4],d47(0,_n4,b,d,e) == d60(_n4,d,b,e)))
	_s.add(ForAll([_n4,_n3,_n2],Implies(And(_n4>=0,And(_n3>=0,_n2>=0)),c26(_n2 + 1,_n3,_n4,b,e,d) == If(((b)>=(d26(_n2,_n3,_n4,b,e,d))),c26(_n2,_n3,_n4,b,e,d),If(((d26(_n2,_n3,_n4,b,e,d))>=(b + 1)),((c26(_n2,_n3,_n4,b,e,d))+(1)),c26(_n2,_n3,_n4,b,e,d))))))
	_s.add(ForAll([_n4,_n3,_n2],Implies(And(_n4>=0,And(_n3>=0,_n2>=0)),e26(_n2 + 1,_n3,_n4,b,e,d) == If(((b)>=(d26(_n2,_n3,_n4,b,e,d))),e10(_N1(_n2,_n3,_n4,b,e,d),_n2,_n3,_n4,b,e,d),e26(_n2,_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3,_n2],Implies(And(_n4>=0,And(_n3>=0,_n2>=0)),d26(_n2 + 1,_n3,_n4,b,e,d) == If(((b)>=(d26(_n2,_n3,_n4,b,e,d))),d10(_N1(_n2,_n3,_n4,b,e,d),_n2,_n3,_n4,b,e,d),d26(_n2,_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3],c26(0,_n3,_n4,b,e,d) == c47(_n3,_n4,b,e,d)))
	_s.add(ForAll([_n4,_n3],e26(0,_n3,_n4,b,e,d) == e47(_n3,_n4,b,e,d)))
	_s.add(ForAll([_n4,_n3],d26(0,_n3,_n4,b,e,d) == ((a47(_n3,_n4,b,e,d))+(1))))
	_s.add(ForAll([_n4,_n1,_n3,_n2],Implies(And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0))),e10(_n1 + 1,_n2,_n3,_n4,b,e,d) == If(((d10(_n1,_n2,_n3,_n4,b,e,d))>=(e10(_n1,_n2,_n3,_n4,b,e,d))),((e10(_n1,_n2,_n3,_n4,b,e,d))+(1)),e10(_n1,_n2,_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n1,_n3,_n2],Implies(And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0))),d10(_n1 + 1,_n2,_n3,_n4,b,e,d) == If(((d10(_n1,_n2,_n3,_n4,b,e,d))>=(e10(_n1,_n2,_n3,_n4,b,e,d))),d10(_n1,_n2,_n3,_n4,b,e,d),If(((e10(_n1,_n2,_n3,_n4,b,e,d))>=(((d10(_n1,_n2,_n3,_n4,b,e,d))+(1)))),((d10(_n1,_n2,_n3,_n4,b,e,d))+(1)),d10(_n1,_n2,_n3,_n4,b,e,d))))))
	_s.add(ForAll([_n4,_n3,_n2],e10(0,_n2,_n3,_n4,b,e,d) == 1))
	_s.add(ForAll([_n4,_n3,_n2],d10(0,_n2,_n3,_n4,b,e,d) == d26(_n2,_n3,_n4,b,e,d)))
	_s.add(Not(((b)>=(d26(0,0,0,b,e,d)))))

except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()

	sys.exit(1)

try:
	result=_s.check()
	if sat==result:
		print "Counter Example"
		print _s.model()
	elif unsat==result:
		result
		try:
			if os.path.isfile('j2llogs.logs'):
				file = open('j2llogs.logs', 'a')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
			else:
				file = open('j2llogs.logs', 'w')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
		except Exception as e:
			file = open('j2llogs.logs', 'a')
			file.write("\n**************\nProof Details\n**************\n"+"Error"+"\n")
			file.close()
		print "Successfully Proved"
	else:
		print "Failed To Prove"
except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()


Query to z3 
import sys
import os
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/setuptools/")
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/z3/python/")
from z3 import *
init(currentdirectory+"/packages/z3")
set_param(proof=True)

try:
	_p1=Int('_p1')
	_p2=Int('_p2')
	_n=Int('_n')
	_bool=Int('_bool')
	arraySort = DeclareSort('arraySort')
	_f=Function('_f',IntSort(),IntSort())
	_ToReal=Function('_ToReal',RealSort(),IntSort())
	_ToInt=Function('_ToInt',IntSort(),RealSort())
	break_3_flag1=Function('break_3_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag10=Function('break_1_flag10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_12_flag60=Function('break_12_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag47=Function('break_9_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	a60=Function('a60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag26=Function('break_3_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	b1=Function('b1',IntSort(),IntSort())
	break_11_flag60=Function('break_11_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n4=Int('_n4')
	break_4_flag47=Function('break_4_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d1=Function('d1',IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag60=Function('break_3_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag60=Function('break_4_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag10=Function('break_2_flag10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d10=Function('d10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag1=Function('break_6_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_7_flag47=Function('break_7_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e10=Function('e10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_11_flag1=Function('break_11_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag26=Function('break_4_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N2=Function('_N2',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag60=Function('break_6_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag60=Function('break_9_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N3=Function('_N3',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag1=Function('break_2_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag1=Function('break_8_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag1=Function('break_9_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag60=Function('break_5_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag47=Function('break_3_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag26=Function('break_5_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_7_flag60=Function('break_7_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N1=Function('_N1',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag26=Function('break_1_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e26=Function('e26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N4=Function('_N4',IntSort(),IntSort(),IntSort(),IntSort())
	a1=Function('a1',IntSort(),IntSort(),IntSort(),IntSort())
	break_10_flag60=Function('break_10_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag47=Function('break_5_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c47=Function('c47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag60=Function('break_1_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag47=Function('break_1_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c26=Function('c26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c1=Function('c1',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e1=Function('e1',IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag26=Function('break_2_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag1=Function('break_5_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	e47=Function('e47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag47=Function('break_8_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_12_flag1=Function('break_12_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	c=Int('c')
	b=Int('b')
	e=Int('e')
	d=Int('d')
	break_2_flag60=Function('break_2_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n2=Int('_n2')
	_n3=Int('_n3')
	break_2_flag47=Function('break_2_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n1=Int('_n1')
	break_7_flag1=Function('break_7_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag60=Function('break_8_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c60=Function('c60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d26=Function('d26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	a47=Function('a47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag1=Function('break_1_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_10_flag1=Function('break_10_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	e60=Function('e60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d47=Function('d47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d60=Function('d60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag47=Function('break_6_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag1=Function('break_4_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	ex03=Function('ex03',RealSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_s=Solver()
	_s.add(ForAll([_n],Implies(_n>=0, _f(_n)==_n)))
	_s.set("timeout",500)
	_s.add(ForAll([_n4],Implies(_n4>=0,a60(_n4 + 1,b,e,d) == a47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,c60(_n4 + 1,c,b,e,d) == c47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,e60(_n4 + 1,e,b,d) == e47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,d60(_n4 + 1,d,b,e) == d47(_N3(_n4,b,e,d),_n4,b,d,e))))
	_s.add(a60(0,b,e,d) == 1)
	_s.add(c60(0,c,b,e,d) == c)
	_s.add(e60(0,e,b,d) == e)
	_s.add(d60(0,d,b,e) == d)
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),a47(_n3 + 1,_n4,b,e,d) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),a47(_n3,_n4,b,e,d),If(((c47(_n3,_n4,b,e,d))>=(((a47(_n3,_n4,b,e,d))+(1)))),((a47(_n3,_n4,b,e,d))+(1)),a47(_n3,_n4,b,e,d))))))
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),c47(_n3 + 1,_n4,b,e,d) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),c26(_N2(_n3,_n4,b,e,d),_n3,_n4,b,e,d),c47(_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),e47(_n3 + 1,_n4,b,e,d) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),e26(_N2(_n3,_n4,b,e,d),_n3,_n4,b,e,d),e47(_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),d47(_n3 + 1,_n4,b,d,e) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),d26(_N2(_n3,_n4,b,e,d),_n3,_n4,b,e,d),d47(_n3,_n4,b,d,e)))))
	_s.add(ForAll([_n4],a47(0,_n4,b,e,d) == a60(_n4,b,e,d)))
	_s.add(ForAll([_n4],c47(0,_n4,b,e,d) == 1))
	_s.add(ForAll([_n4],e47(0,_n4,b,e,d) == e60(_n4,e,b,d)))
	_s.add(ForAll([_n4],d47(0,_n4,b,d,e) == d60(_n4,d,b,e)))
	_s.add(ForAll([_n4,_n3,_n2],Implies(And(_n4>=0,And(_n3>=0,_n2>=0)),c26(_n2 + 1,_n3,_n4,b,e,d) == If(((b)>=(d26(_n2,_n3,_n4,b,e,d))),c26(_n2,_n3,_n4,b,e,d),If(((d26(_n2,_n3,_n4,b,e,d))>=(b + 1)),((c26(_n2,_n3,_n4,b,e,d))+(1)),c26(_n2,_n3,_n4,b,e,d))))))
	_s.add(ForAll([_n4,_n3,_n2],Implies(And(_n4>=0,And(_n3>=0,_n2>=0)),e26(_n2 + 1,_n3,_n4,b,e,d) == If(((b)>=(d26(_n2,_n3,_n4,b,e,d))),e10(_N1(_n2,_n3,_n4,b,e,d),_n2,_n3,_n4,b,e,d),e26(_n2,_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3,_n2],Implies(And(_n4>=0,And(_n3>=0,_n2>=0)),d26(_n2 + 1,_n3,_n4,b,e,d) == If(((b)>=(d26(_n2,_n3,_n4,b,e,d))),d10(_N1(_n2,_n3,_n4,b,e,d),_n2,_n3,_n4,b,e,d),d26(_n2,_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3],c26(0,_n3,_n4,b,e,d) == c47(_n3,_n4,b,e,d)))
	_s.add(ForAll([_n4,_n3],e26(0,_n3,_n4,b,e,d) == e47(_n3,_n4,b,e,d)))
	_s.add(ForAll([_n4,_n3],d26(0,_n3,_n4,b,e,d) == ((a47(_n3,_n4,b,e,d))+(1))))
	_s.add(ForAll([_n4,_n1,_n3,_n2],Implies(And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0))),e10(_n1 + 1,_n2,_n3,_n4,b,e,d) == If(((d10(_n1,_n2,_n3,_n4,b,e,d))>=(e10(_n1,_n2,_n3,_n4,b,e,d))),((e10(_n1,_n2,_n3,_n4,b,e,d))+(1)),e10(_n1,_n2,_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n1,_n3,_n2],Implies(And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0))),d10(_n1 + 1,_n2,_n3,_n4,b,e,d) == If(((d10(_n1,_n2,_n3,_n4,b,e,d))>=(e10(_n1,_n2,_n3,_n4,b,e,d))),d10(_n1,_n2,_n3,_n4,b,e,d),If(((e10(_n1,_n2,_n3,_n4,b,e,d))>=(((d10(_n1,_n2,_n3,_n4,b,e,d))+(1)))),((d10(_n1,_n2,_n3,_n4,b,e,d))+(1)),d10(_n1,_n2,_n3,_n4,b,e,d))))))
	_s.add(ForAll([_n4,_n3,_n2],e10(0,_n2,_n3,_n4,b,e,d) == 1))
	_s.add(ForAll([_n4,_n3,_n2],d10(0,_n2,_n3,_n4,b,e,d) == d26(_n2,_n3,_n4,b,e,d)))
	_s.add(Not(((a47(0,0,b,e,d))>=(c47(0,0,b,e,d)))))

except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()

	sys.exit(1)

try:
	result=_s.check()
	if sat==result:
		print "Counter Example"
		print _s.model()
	elif unsat==result:
		result
		try:
			if os.path.isfile('j2llogs.logs'):
				file = open('j2llogs.logs', 'a')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
			else:
				file = open('j2llogs.logs', 'w')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
		except Exception as e:
			file = open('j2llogs.logs', 'a')
			file.write("\n**************\nProof Details\n**************\n"+"Error"+"\n")
			file.close()
		print "Successfully Proved"
	else:
		print "Failed To Prove"
except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()


Query to z3 
import sys
import os
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/setuptools/")
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/z3/python/")
from z3 import *
init(currentdirectory+"/packages/z3")
set_param(proof=True)

try:
	_p1=Int('_p1')
	_p2=Int('_p2')
	_n=Int('_n')
	_bool=Int('_bool')
	arraySort = DeclareSort('arraySort')
	_f=Function('_f',IntSort(),IntSort())
	_ToReal=Function('_ToReal',RealSort(),IntSort())
	_ToInt=Function('_ToInt',IntSort(),RealSort())
	break_3_flag1=Function('break_3_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag10=Function('break_1_flag10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_12_flag60=Function('break_12_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag47=Function('break_9_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	a60=Function('a60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag26=Function('break_3_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	b1=Function('b1',IntSort(),IntSort())
	break_11_flag60=Function('break_11_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n4=Int('_n4')
	break_4_flag47=Function('break_4_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d1=Function('d1',IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag60=Function('break_3_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag60=Function('break_4_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag10=Function('break_2_flag10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d10=Function('d10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag1=Function('break_6_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_7_flag47=Function('break_7_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e10=Function('e10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_11_flag1=Function('break_11_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag26=Function('break_4_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N2=Function('_N2',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag60=Function('break_6_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag60=Function('break_9_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N3=Function('_N3',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag1=Function('break_2_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag1=Function('break_8_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag1=Function('break_9_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag60=Function('break_5_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag47=Function('break_3_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag26=Function('break_5_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_7_flag60=Function('break_7_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N1=Function('_N1',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag26=Function('break_1_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e26=Function('e26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N4=Function('_N4',IntSort(),IntSort(),IntSort(),IntSort())
	a1=Function('a1',IntSort(),IntSort(),IntSort(),IntSort())
	break_10_flag60=Function('break_10_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag47=Function('break_5_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c47=Function('c47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag60=Function('break_1_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag47=Function('break_1_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c26=Function('c26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c1=Function('c1',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e1=Function('e1',IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag26=Function('break_2_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag1=Function('break_5_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	e47=Function('e47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag47=Function('break_8_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_12_flag1=Function('break_12_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	c=Int('c')
	b=Int('b')
	e=Int('e')
	d=Int('d')
	break_2_flag60=Function('break_2_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n2=Int('_n2')
	_n3=Int('_n3')
	break_2_flag47=Function('break_2_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n1=Int('_n1')
	break_7_flag1=Function('break_7_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag60=Function('break_8_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c60=Function('c60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d26=Function('d26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	a47=Function('a47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag1=Function('break_1_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_10_flag1=Function('break_10_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	e60=Function('e60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d47=Function('d47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d60=Function('d60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag47=Function('break_6_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag1=Function('break_4_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	ex03=Function('ex03',RealSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_s=Solver()
	_s.add(ForAll([_n],Implies(_n>=0, _f(_n)==_n)))
	_s.set("timeout",500)
	_s.add(ForAll([_n4],Implies(_n4>=0,a60(_n4 + 1,b,e,d) == a47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,c60(_n4 + 1,c,b,e,d) == c47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,e60(_n4 + 1,e,b,d) == e47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,d60(_n4 + 1,d,b,e) == d47(_N3(_n4,b,e,d),_n4,b,d,e))))
	_s.add(a60(0,b,e,d) == 1)
	_s.add(c60(0,c,b,e,d) == c)
	_s.add(e60(0,e,b,d) == e)
	_s.add(d60(0,d,b,e) == d)
	_s.add(Not(((b)<(((_N4(b,e,d))+(1))))))

except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()

	sys.exit(1)

try:
	result=_s.check()
	if sat==result:
		print "Counter Example"
		print _s.model()
	elif unsat==result:
		result
		try:
			if os.path.isfile('j2llogs.logs'):
				file = open('j2llogs.logs', 'a')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
			else:
				file = open('j2llogs.logs', 'w')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
		except Exception as e:
			file = open('j2llogs.logs', 'a')
			file.write("\n**************\nProof Details\n**************\n"+"Error"+"\n")
			file.close()
		print "Successfully Proved"
	else:
		print "Failed To Prove"
except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()


***********************
2018-09-08 10:47:16
***********************

Command--Translate 

Parameters--
 File Name--loop_bound_tool/benchmark/binary_seach.i

***********************
2018-09-08 10:53:31
***********************

Command--Translate 

Parameters--
 File Name--loop_bound_tool/benchmark/ABC_ex03.c

Query to z3 
import sys
import os
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/setuptools/")
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/z3/python/")
from z3 import *
init(currentdirectory+"/packages/z3")
set_param(proof=True)

try:
	_p1=Int('_p1')
	_p2=Int('_p2')
	_n=Int('_n')
	_bool=Int('_bool')
	arraySort = DeclareSort('arraySort')
	_f=Function('_f',IntSort(),IntSort())
	_ToReal=Function('_ToReal',RealSort(),IntSort())
	_ToInt=Function('_ToInt',IntSort(),RealSort())
	break_3_flag1=Function('break_3_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag10=Function('break_1_flag10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_12_flag60=Function('break_12_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag47=Function('break_9_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	a60=Function('a60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag26=Function('break_3_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	b1=Function('b1',IntSort(),IntSort())
	break_11_flag60=Function('break_11_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n4=Int('_n4')
	break_4_flag47=Function('break_4_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d1=Function('d1',IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag60=Function('break_3_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag60=Function('break_4_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag10=Function('break_2_flag10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d10=Function('d10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag1=Function('break_6_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_7_flag47=Function('break_7_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e10=Function('e10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_11_flag1=Function('break_11_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag26=Function('break_4_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N2=Function('_N2',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag60=Function('break_6_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag60=Function('break_9_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N3=Function('_N3',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag1=Function('break_2_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag1=Function('break_8_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag1=Function('break_9_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag60=Function('break_5_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag47=Function('break_3_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag26=Function('break_5_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_7_flag60=Function('break_7_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N1=Function('_N1',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag26=Function('break_1_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e26=Function('e26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N4=Function('_N4',IntSort(),IntSort(),IntSort(),IntSort())
	a1=Function('a1',IntSort(),IntSort(),IntSort(),IntSort())
	break_10_flag60=Function('break_10_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag47=Function('break_5_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c47=Function('c47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag60=Function('break_1_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag47=Function('break_1_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c26=Function('c26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c1=Function('c1',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e1=Function('e1',IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag26=Function('break_2_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag1=Function('break_5_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	e47=Function('e47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag47=Function('break_8_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_12_flag1=Function('break_12_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	c=Int('c')
	b=Int('b')
	e=Int('e')
	d=Int('d')
	break_2_flag60=Function('break_2_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n2=Int('_n2')
	_n3=Int('_n3')
	break_2_flag47=Function('break_2_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n1=Int('_n1')
	break_7_flag1=Function('break_7_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag60=Function('break_8_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c60=Function('c60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d26=Function('d26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	a47=Function('a47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag1=Function('break_1_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_10_flag1=Function('break_10_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	e60=Function('e60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d47=Function('d47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d60=Function('d60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag47=Function('break_6_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag1=Function('break_4_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	ex03=Function('ex03',RealSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_s=Solver()
	_s.add(ForAll([_n],Implies(_n>=0, _f(_n)==_n)))
	_s.set("timeout",500)
	_s.add(ForAll([_n4],Implies(_n4>=0,a60(_n4 + 1,b,e,d) == a47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,c60(_n4 + 1,c,b,e,d) == c47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,e60(_n4 + 1,e,b,d) == e47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,d60(_n4 + 1,d,b,e) == d47(_N3(_n4,b,e,d),_n4,b,d,e))))
	_s.add(a60(0,b,e,d) == 1)
	_s.add(c60(0,c,b,e,d) == c)
	_s.add(e60(0,e,b,d) == e)
	_s.add(d60(0,d,b,e) == d)
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),a47(_n3 + 1,_n4,b,e,d) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),a47(_n3,_n4,b,e,d),If(((c47(_n3,_n4,b,e,d))>=(((a47(_n3,_n4,b,e,d))+(1)))),((a47(_n3,_n4,b,e,d))+(1)),a47(_n3,_n4,b,e,d))))))
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),c47(_n3 + 1,_n4,b,e,d) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),c26(_N2(_n3,_n4,b,e,d),_n3,_n4,b,e,d),c47(_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),e47(_n3 + 1,_n4,b,e,d) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),e26(_N2(_n3,_n4,b,e,d),_n3,_n4,b,e,d),e47(_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),d47(_n3 + 1,_n4,b,d,e) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),d26(_N2(_n3,_n4,b,e,d),_n3,_n4,b,e,d),d47(_n3,_n4,b,d,e)))))
	_s.add(ForAll([_n4],a47(0,_n4,b,e,d) == a60(_n4,b,e,d)))
	_s.add(ForAll([_n4],c47(0,_n4,b,e,d) == 1))
	_s.add(ForAll([_n4],e47(0,_n4,b,e,d) == e60(_n4,e,b,d)))
	_s.add(ForAll([_n4],d47(0,_n4,b,d,e) == d60(_n4,d,b,e)))
	_s.add(ForAll([_n4,_n3,_n2],Implies(And(_n4>=0,And(_n3>=0,_n2>=0)),c26(_n2 + 1,_n3,_n4,b,e,d) == If(((b)>=(d26(_n2,_n3,_n4,b,e,d))),c26(_n2,_n3,_n4,b,e,d),If(((d26(_n2,_n3,_n4,b,e,d))>=(b + 1)),((c26(_n2,_n3,_n4,b,e,d))+(1)),c26(_n2,_n3,_n4,b,e,d))))))
	_s.add(ForAll([_n4,_n3,_n2],Implies(And(_n4>=0,And(_n3>=0,_n2>=0)),e26(_n2 + 1,_n3,_n4,b,e,d) == If(((b)>=(d26(_n2,_n3,_n4,b,e,d))),e10(_N1(_n2,_n3,_n4,b,e,d),_n2,_n3,_n4,b,e,d),e26(_n2,_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3,_n2],Implies(And(_n4>=0,And(_n3>=0,_n2>=0)),d26(_n2 + 1,_n3,_n4,b,e,d) == If(((b)>=(d26(_n2,_n3,_n4,b,e,d))),d10(_N1(_n2,_n3,_n4,b,e,d),_n2,_n3,_n4,b,e,d),d26(_n2,_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3],c26(0,_n3,_n4,b,e,d) == c47(_n3,_n4,b,e,d)))
	_s.add(ForAll([_n4,_n3],e26(0,_n3,_n4,b,e,d) == e47(_n3,_n4,b,e,d)))
	_s.add(ForAll([_n4,_n3],d26(0,_n3,_n4,b,e,d) == ((a47(_n3,_n4,b,e,d))+(1))))
	_s.add(ForAll([_n4,_n1,_n3,_n2],Implies(And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0))),e10(_n1 + 1,_n2,_n3,_n4,b,e,d) == If(((d10(_n1,_n2,_n3,_n4,b,e,d))>=(e10(_n1,_n2,_n3,_n4,b,e,d))),((e10(_n1,_n2,_n3,_n4,b,e,d))+(1)),e10(_n1,_n2,_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n1,_n3,_n2],Implies(And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0))),d10(_n1 + 1,_n2,_n3,_n4,b,e,d) == If(((d10(_n1,_n2,_n3,_n4,b,e,d))>=(e10(_n1,_n2,_n3,_n4,b,e,d))),d10(_n1,_n2,_n3,_n4,b,e,d),If(((e10(_n1,_n2,_n3,_n4,b,e,d))>=(((d10(_n1,_n2,_n3,_n4,b,e,d))+(1)))),((d10(_n1,_n2,_n3,_n4,b,e,d))+(1)),d10(_n1,_n2,_n3,_n4,b,e,d))))))
	_s.add(ForAll([_n4,_n3,_n2],e10(0,_n2,_n3,_n4,b,e,d) == 1))
	_s.add(ForAll([_n4,_n3,_n2],d10(0,_n2,_n3,_n4,b,e,d) == d26(_n2,_n3,_n4,b,e,d)))
	_s.add(Not(((d10(0,0,0,0,b,e,d))>=(e10(0,0,0,0,b,e,d)))))

except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()

	sys.exit(1)

try:
	result=_s.check()
	if sat==result:
		print "Counter Example"
		print _s.model()
	elif unsat==result:
		result
		try:
			if os.path.isfile('j2llogs.logs'):
				file = open('j2llogs.logs', 'a')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
			else:
				file = open('j2llogs.logs', 'w')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
		except Exception as e:
			file = open('j2llogs.logs', 'a')
			file.write("\n**************\nProof Details\n**************\n"+"Error"+"\n")
			file.close()
		print "Successfully Proved"
	else:
		print "Failed To Prove"
except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()


Query to z3 
import sys
import os
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/setuptools/")
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/z3/python/")
from z3 import *
init(currentdirectory+"/packages/z3")
set_param(proof=True)

try:
	_p1=Int('_p1')
	_p2=Int('_p2')
	_n=Int('_n')
	_bool=Int('_bool')
	arraySort = DeclareSort('arraySort')
	_f=Function('_f',IntSort(),IntSort())
	_ToReal=Function('_ToReal',RealSort(),IntSort())
	_ToInt=Function('_ToInt',IntSort(),RealSort())
	break_3_flag1=Function('break_3_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag10=Function('break_1_flag10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_12_flag60=Function('break_12_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag47=Function('break_9_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	a60=Function('a60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag26=Function('break_3_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	b1=Function('b1',IntSort(),IntSort())
	break_11_flag60=Function('break_11_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n4=Int('_n4')
	break_4_flag47=Function('break_4_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d1=Function('d1',IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag60=Function('break_3_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag60=Function('break_4_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag10=Function('break_2_flag10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d10=Function('d10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag1=Function('break_6_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_7_flag47=Function('break_7_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e10=Function('e10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_11_flag1=Function('break_11_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag26=Function('break_4_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N2=Function('_N2',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag60=Function('break_6_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag60=Function('break_9_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N3=Function('_N3',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag1=Function('break_2_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag1=Function('break_8_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag1=Function('break_9_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag60=Function('break_5_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag47=Function('break_3_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag26=Function('break_5_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_7_flag60=Function('break_7_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N1=Function('_N1',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag26=Function('break_1_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e26=Function('e26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N4=Function('_N4',IntSort(),IntSort(),IntSort(),IntSort())
	a1=Function('a1',IntSort(),IntSort(),IntSort(),IntSort())
	break_10_flag60=Function('break_10_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag47=Function('break_5_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c47=Function('c47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag60=Function('break_1_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag47=Function('break_1_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c26=Function('c26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c1=Function('c1',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e1=Function('e1',IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag26=Function('break_2_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag1=Function('break_5_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	e47=Function('e47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag47=Function('break_8_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_12_flag1=Function('break_12_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	c=Int('c')
	b=Int('b')
	e=Int('e')
	d=Int('d')
	break_2_flag60=Function('break_2_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n2=Int('_n2')
	_n3=Int('_n3')
	break_2_flag47=Function('break_2_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n1=Int('_n1')
	break_7_flag1=Function('break_7_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag60=Function('break_8_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c60=Function('c60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d26=Function('d26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	a47=Function('a47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag1=Function('break_1_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_10_flag1=Function('break_10_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	e60=Function('e60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d47=Function('d47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d60=Function('d60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag47=Function('break_6_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag1=Function('break_4_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	ex03=Function('ex03',RealSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_s=Solver()
	_s.add(ForAll([_n],Implies(_n>=0, _f(_n)==_n)))
	_s.set("timeout",500)
	_s.add(ForAll([_n4],Implies(_n4>=0,a60(_n4 + 1,b,e,d) == a47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,c60(_n4 + 1,c,b,e,d) == c47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,e60(_n4 + 1,e,b,d) == e47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,d60(_n4 + 1,d,b,e) == d47(_N3(_n4,b,e,d),_n4,b,d,e))))
	_s.add(a60(0,b,e,d) == 1)
	_s.add(c60(0,c,b,e,d) == c)
	_s.add(e60(0,e,b,d) == e)
	_s.add(d60(0,d,b,e) == d)
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),a47(_n3 + 1,_n4,b,e,d) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),a47(_n3,_n4,b,e,d),If(((c47(_n3,_n4,b,e,d))>=(((a47(_n3,_n4,b,e,d))+(1)))),((a47(_n3,_n4,b,e,d))+(1)),a47(_n3,_n4,b,e,d))))))
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),c47(_n3 + 1,_n4,b,e,d) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),c26(_N2(_n3,_n4,b,e,d),_n3,_n4,b,e,d),c47(_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),e47(_n3 + 1,_n4,b,e,d) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),e26(_N2(_n3,_n4,b,e,d),_n3,_n4,b,e,d),e47(_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),d47(_n3 + 1,_n4,b,d,e) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),d26(_N2(_n3,_n4,b,e,d),_n3,_n4,b,e,d),d47(_n3,_n4,b,d,e)))))
	_s.add(ForAll([_n4],a47(0,_n4,b,e,d) == a60(_n4,b,e,d)))
	_s.add(ForAll([_n4],c47(0,_n4,b,e,d) == 1))
	_s.add(ForAll([_n4],e47(0,_n4,b,e,d) == e60(_n4,e,b,d)))
	_s.add(ForAll([_n4],d47(0,_n4,b,d,e) == d60(_n4,d,b,e)))
	_s.add(ForAll([_n4,_n3,_n2],Implies(And(_n4>=0,And(_n3>=0,_n2>=0)),c26(_n2 + 1,_n3,_n4,b,e,d) == If(((b)>=(d26(_n2,_n3,_n4,b,e,d))),c26(_n2,_n3,_n4,b,e,d),If(((d26(_n2,_n3,_n4,b,e,d))>=(b + 1)),((c26(_n2,_n3,_n4,b,e,d))+(1)),c26(_n2,_n3,_n4,b,e,d))))))
	_s.add(ForAll([_n4,_n3,_n2],Implies(And(_n4>=0,And(_n3>=0,_n2>=0)),e26(_n2 + 1,_n3,_n4,b,e,d) == If(((b)>=(d26(_n2,_n3,_n4,b,e,d))),e10(_N1(_n2,_n3,_n4,b,e,d),_n2,_n3,_n4,b,e,d),e26(_n2,_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3,_n2],Implies(And(_n4>=0,And(_n3>=0,_n2>=0)),d26(_n2 + 1,_n3,_n4,b,e,d) == If(((b)>=(d26(_n2,_n3,_n4,b,e,d))),d10(_N1(_n2,_n3,_n4,b,e,d),_n2,_n3,_n4,b,e,d),d26(_n2,_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3],c26(0,_n3,_n4,b,e,d) == c47(_n3,_n4,b,e,d)))
	_s.add(ForAll([_n4,_n3],e26(0,_n3,_n4,b,e,d) == e47(_n3,_n4,b,e,d)))
	_s.add(ForAll([_n4,_n3],d26(0,_n3,_n4,b,e,d) == ((a47(_n3,_n4,b,e,d))+(1))))
	_s.add(ForAll([_n4,_n1,_n3,_n2],Implies(And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0))),e10(_n1 + 1,_n2,_n3,_n4,b,e,d) == If(((d10(_n1,_n2,_n3,_n4,b,e,d))>=(e10(_n1,_n2,_n3,_n4,b,e,d))),((e10(_n1,_n2,_n3,_n4,b,e,d))+(1)),e10(_n1,_n2,_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n1,_n3,_n2],Implies(And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0))),d10(_n1 + 1,_n2,_n3,_n4,b,e,d) == If(((d10(_n1,_n2,_n3,_n4,b,e,d))>=(e10(_n1,_n2,_n3,_n4,b,e,d))),d10(_n1,_n2,_n3,_n4,b,e,d),If(((e10(_n1,_n2,_n3,_n4,b,e,d))>=(((d10(_n1,_n2,_n3,_n4,b,e,d))+(1)))),((d10(_n1,_n2,_n3,_n4,b,e,d))+(1)),d10(_n1,_n2,_n3,_n4,b,e,d))))))
	_s.add(ForAll([_n4,_n3,_n2],e10(0,_n2,_n3,_n4,b,e,d) == 1))
	_s.add(ForAll([_n4,_n3,_n2],d10(0,_n2,_n3,_n4,b,e,d) == d26(_n2,_n3,_n4,b,e,d)))
	_s.add(Not(((b)>=(d26(0,0,0,b,e,d)))))

except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()

	sys.exit(1)

try:
	result=_s.check()
	if sat==result:
		print "Counter Example"
		print _s.model()
	elif unsat==result:
		result
		try:
			if os.path.isfile('j2llogs.logs'):
				file = open('j2llogs.logs', 'a')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
			else:
				file = open('j2llogs.logs', 'w')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
		except Exception as e:
			file = open('j2llogs.logs', 'a')
			file.write("\n**************\nProof Details\n**************\n"+"Error"+"\n")
			file.close()
		print "Successfully Proved"
	else:
		print "Failed To Prove"
except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()


Query to z3 
import sys
import os
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/setuptools/")
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/z3/python/")
from z3 import *
init(currentdirectory+"/packages/z3")
set_param(proof=True)

try:
	_p1=Int('_p1')
	_p2=Int('_p2')
	_n=Int('_n')
	_bool=Int('_bool')
	arraySort = DeclareSort('arraySort')
	_f=Function('_f',IntSort(),IntSort())
	_ToReal=Function('_ToReal',RealSort(),IntSort())
	_ToInt=Function('_ToInt',IntSort(),RealSort())
	break_3_flag1=Function('break_3_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag10=Function('break_1_flag10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_12_flag60=Function('break_12_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag47=Function('break_9_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	a60=Function('a60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag26=Function('break_3_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	b1=Function('b1',IntSort(),IntSort())
	break_11_flag60=Function('break_11_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n4=Int('_n4')
	break_4_flag47=Function('break_4_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d1=Function('d1',IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag60=Function('break_3_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag60=Function('break_4_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag10=Function('break_2_flag10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d10=Function('d10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag1=Function('break_6_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_7_flag47=Function('break_7_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e10=Function('e10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_11_flag1=Function('break_11_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag26=Function('break_4_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N2=Function('_N2',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag60=Function('break_6_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag60=Function('break_9_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N3=Function('_N3',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag1=Function('break_2_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag1=Function('break_8_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag1=Function('break_9_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag60=Function('break_5_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag47=Function('break_3_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag26=Function('break_5_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_7_flag60=Function('break_7_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N1=Function('_N1',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag26=Function('break_1_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e26=Function('e26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N4=Function('_N4',IntSort(),IntSort(),IntSort(),IntSort())
	a1=Function('a1',IntSort(),IntSort(),IntSort(),IntSort())
	break_10_flag60=Function('break_10_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag47=Function('break_5_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c47=Function('c47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag60=Function('break_1_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag47=Function('break_1_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c26=Function('c26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c1=Function('c1',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e1=Function('e1',IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag26=Function('break_2_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag1=Function('break_5_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	e47=Function('e47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag47=Function('break_8_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_12_flag1=Function('break_12_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	c=Int('c')
	b=Int('b')
	e=Int('e')
	d=Int('d')
	break_2_flag60=Function('break_2_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n2=Int('_n2')
	_n3=Int('_n3')
	break_2_flag47=Function('break_2_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n1=Int('_n1')
	break_7_flag1=Function('break_7_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag60=Function('break_8_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c60=Function('c60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d26=Function('d26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	a47=Function('a47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag1=Function('break_1_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_10_flag1=Function('break_10_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	e60=Function('e60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d47=Function('d47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d60=Function('d60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag47=Function('break_6_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag1=Function('break_4_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	ex03=Function('ex03',RealSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_s=Solver()
	_s.add(ForAll([_n],Implies(_n>=0, _f(_n)==_n)))
	_s.set("timeout",500)
	_s.add(ForAll([_n4],Implies(_n4>=0,a60(_n4 + 1,b,e,d) == a47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,c60(_n4 + 1,c,b,e,d) == c47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,e60(_n4 + 1,e,b,d) == e47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,d60(_n4 + 1,d,b,e) == d47(_N3(_n4,b,e,d),_n4,b,d,e))))
	_s.add(a60(0,b,e,d) == 1)
	_s.add(c60(0,c,b,e,d) == c)
	_s.add(e60(0,e,b,d) == e)
	_s.add(d60(0,d,b,e) == d)
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),a47(_n3 + 1,_n4,b,e,d) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),a47(_n3,_n4,b,e,d),If(((c47(_n3,_n4,b,e,d))>=(((a47(_n3,_n4,b,e,d))+(1)))),((a47(_n3,_n4,b,e,d))+(1)),a47(_n3,_n4,b,e,d))))))
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),c47(_n3 + 1,_n4,b,e,d) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),c26(_N2(_n3,_n4,b,e,d),_n3,_n4,b,e,d),c47(_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),e47(_n3 + 1,_n4,b,e,d) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),e26(_N2(_n3,_n4,b,e,d),_n3,_n4,b,e,d),e47(_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3],Implies(And(_n4>=0,_n3>=0),d47(_n3 + 1,_n4,b,d,e) == If(((a47(_n3,_n4,b,e,d))>=(c47(_n3,_n4,b,e,d))),d26(_N2(_n3,_n4,b,e,d),_n3,_n4,b,e,d),d47(_n3,_n4,b,d,e)))))
	_s.add(ForAll([_n4],a47(0,_n4,b,e,d) == a60(_n4,b,e,d)))
	_s.add(ForAll([_n4],c47(0,_n4,b,e,d) == 1))
	_s.add(ForAll([_n4],e47(0,_n4,b,e,d) == e60(_n4,e,b,d)))
	_s.add(ForAll([_n4],d47(0,_n4,b,d,e) == d60(_n4,d,b,e)))
	_s.add(ForAll([_n4,_n3,_n2],Implies(And(_n4>=0,And(_n3>=0,_n2>=0)),c26(_n2 + 1,_n3,_n4,b,e,d) == If(((b)>=(d26(_n2,_n3,_n4,b,e,d))),c26(_n2,_n3,_n4,b,e,d),If(((d26(_n2,_n3,_n4,b,e,d))>=(b + 1)),((c26(_n2,_n3,_n4,b,e,d))+(1)),c26(_n2,_n3,_n4,b,e,d))))))
	_s.add(ForAll([_n4,_n3,_n2],Implies(And(_n4>=0,And(_n3>=0,_n2>=0)),e26(_n2 + 1,_n3,_n4,b,e,d) == If(((b)>=(d26(_n2,_n3,_n4,b,e,d))),e10(_N1(_n2,_n3,_n4,b,e,d),_n2,_n3,_n4,b,e,d),e26(_n2,_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3,_n2],Implies(And(_n4>=0,And(_n3>=0,_n2>=0)),d26(_n2 + 1,_n3,_n4,b,e,d) == If(((b)>=(d26(_n2,_n3,_n4,b,e,d))),d10(_N1(_n2,_n3,_n4,b,e,d),_n2,_n3,_n4,b,e,d),d26(_n2,_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n3],c26(0,_n3,_n4,b,e,d) == c47(_n3,_n4,b,e,d)))
	_s.add(ForAll([_n4,_n3],e26(0,_n3,_n4,b,e,d) == e47(_n3,_n4,b,e,d)))
	_s.add(ForAll([_n4,_n3],d26(0,_n3,_n4,b,e,d) == ((a47(_n3,_n4,b,e,d))+(1))))
	_s.add(ForAll([_n4,_n1,_n3,_n2],Implies(And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0))),e10(_n1 + 1,_n2,_n3,_n4,b,e,d) == If(((d10(_n1,_n2,_n3,_n4,b,e,d))>=(e10(_n1,_n2,_n3,_n4,b,e,d))),((e10(_n1,_n2,_n3,_n4,b,e,d))+(1)),e10(_n1,_n2,_n3,_n4,b,e,d)))))
	_s.add(ForAll([_n4,_n1,_n3,_n2],Implies(And(_n4>=0,And(_n1>=0,And(_n3>=0,_n2>=0))),d10(_n1 + 1,_n2,_n3,_n4,b,e,d) == If(((d10(_n1,_n2,_n3,_n4,b,e,d))>=(e10(_n1,_n2,_n3,_n4,b,e,d))),d10(_n1,_n2,_n3,_n4,b,e,d),If(((e10(_n1,_n2,_n3,_n4,b,e,d))>=(((d10(_n1,_n2,_n3,_n4,b,e,d))+(1)))),((d10(_n1,_n2,_n3,_n4,b,e,d))+(1)),d10(_n1,_n2,_n3,_n4,b,e,d))))))
	_s.add(ForAll([_n4,_n3,_n2],e10(0,_n2,_n3,_n4,b,e,d) == 1))
	_s.add(ForAll([_n4,_n3,_n2],d10(0,_n2,_n3,_n4,b,e,d) == d26(_n2,_n3,_n4,b,e,d)))
	_s.add(Not(((a47(0,0,b,e,d))>=(c47(0,0,b,e,d)))))

except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()

	sys.exit(1)

try:
	result=_s.check()
	if sat==result:
		print "Counter Example"
		print _s.model()
	elif unsat==result:
		result
		try:
			if os.path.isfile('j2llogs.logs'):
				file = open('j2llogs.logs', 'a')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
			else:
				file = open('j2llogs.logs', 'w')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
		except Exception as e:
			file = open('j2llogs.logs', 'a')
			file.write("\n**************\nProof Details\n**************\n"+"Error"+"\n")
			file.close()
		print "Successfully Proved"
	else:
		print "Failed To Prove"
except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()


Query to z3 
import sys
import os
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/setuptools/")
currentdirectory = os.path.dirname(os.path.realpath(__file__))
sys.path.append(currentdirectory+"/packages/z3/python/")
from z3 import *
init(currentdirectory+"/packages/z3")
set_param(proof=True)

try:
	_p1=Int('_p1')
	_p2=Int('_p2')
	_n=Int('_n')
	_bool=Int('_bool')
	arraySort = DeclareSort('arraySort')
	_f=Function('_f',IntSort(),IntSort())
	_ToReal=Function('_ToReal',RealSort(),IntSort())
	_ToInt=Function('_ToInt',IntSort(),RealSort())
	break_3_flag1=Function('break_3_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag10=Function('break_1_flag10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_12_flag60=Function('break_12_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag47=Function('break_9_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	a60=Function('a60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag26=Function('break_3_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	b1=Function('b1',IntSort(),IntSort())
	break_11_flag60=Function('break_11_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n4=Int('_n4')
	break_4_flag47=Function('break_4_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d1=Function('d1',IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag60=Function('break_3_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag60=Function('break_4_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag10=Function('break_2_flag10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d10=Function('d10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag1=Function('break_6_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_7_flag47=Function('break_7_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e10=Function('e10',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_11_flag1=Function('break_11_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag26=Function('break_4_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N2=Function('_N2',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag60=Function('break_6_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag60=Function('break_9_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N3=Function('_N3',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag1=Function('break_2_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag1=Function('break_8_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_9_flag1=Function('break_9_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag60=Function('break_5_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_3_flag47=Function('break_3_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag26=Function('break_5_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_7_flag60=Function('break_7_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N1=Function('_N1',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag26=Function('break_1_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e26=Function('e26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_N4=Function('_N4',IntSort(),IntSort(),IntSort(),IntSort())
	a1=Function('a1',IntSort(),IntSort(),IntSort(),IntSort())
	break_10_flag60=Function('break_10_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag47=Function('break_5_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c47=Function('c47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag60=Function('break_1_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag47=Function('break_1_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c26=Function('c26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c1=Function('c1',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	e1=Function('e1',IntSort(),IntSort(),IntSort(),IntSort())
	break_2_flag26=Function('break_2_flag26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_5_flag1=Function('break_5_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	e47=Function('e47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag47=Function('break_8_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_12_flag1=Function('break_12_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	c=Int('c')
	b=Int('b')
	e=Int('e')
	d=Int('d')
	break_2_flag60=Function('break_2_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n2=Int('_n2')
	_n3=Int('_n3')
	break_2_flag47=Function('break_2_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_n1=Int('_n1')
	break_7_flag1=Function('break_7_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_8_flag60=Function('break_8_flag60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	c60=Function('c60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d26=Function('d26',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	a47=Function('a47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_1_flag1=Function('break_1_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	break_10_flag1=Function('break_10_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	e60=Function('e60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d47=Function('d47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	d60=Function('d60',IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_6_flag47=Function('break_6_flag47',IntSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	break_4_flag1=Function('break_4_flag1',IntSort(),IntSort(),IntSort(),IntSort())
	ex03=Function('ex03',RealSort(),IntSort(),IntSort(),IntSort(),IntSort(),IntSort())
	_s=Solver()
	_s.add(ForAll([_n],Implies(_n>=0, _f(_n)==_n)))
	_s.set("timeout",500)
	_s.add(ForAll([_n4],Implies(_n4>=0,a60(_n4 + 1,b,e,d) == a47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,c60(_n4 + 1,c,b,e,d) == c47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,e60(_n4 + 1,e,b,d) == e47(_N3(_n4,b,e,d),_n4,b,e,d))))
	_s.add(ForAll([_n4],Implies(_n4>=0,d60(_n4 + 1,d,b,e) == d47(_N3(_n4,b,e,d),_n4,b,d,e))))
	_s.add(a60(0,b,e,d) == 1)
	_s.add(c60(0,c,b,e,d) == c)
	_s.add(e60(0,e,b,d) == e)
	_s.add(d60(0,d,b,e) == d)
	_s.add(Not(((b)<(((_N4(b,e,d))+(1))))))

except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()

	sys.exit(1)

try:
	result=_s.check()
	if sat==result:
		print "Counter Example"
		print _s.model()
	elif unsat==result:
		result
		try:
			if os.path.isfile('j2llogs.logs'):
				file = open('j2llogs.logs', 'a')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
			else:
				file = open('j2llogs.logs', 'w')
				file.write("\n**************\nProof Details\n**************\n"+str(_s.proof().children())+"\n")
				file.close()
		except Exception as e:
			file = open('j2llogs.logs', 'a')
			file.write("\n**************\nProof Details\n**************\n"+"Error"+"\n")
			file.close()
		print "Successfully Proved"
	else:
		print "Failed To Prove"
except Exception as e:
	print "Error(Z3Query)"
	file = open('j2llogs.logs', 'a')

	file.write(str(e))

	file.close()


***********************
2018-09-08 10:54:52
***********************

Command--Translate 

Parameters--
 File Name--loop_bound_tool/benchmark/binary_seach.i
